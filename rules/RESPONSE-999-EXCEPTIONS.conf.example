# ------------------------------------------------------------------------
# OWASP ModSecurity Core Rule Set ver.3.0.0
# Copyright (c) 2006-2016 Trustwave and contributors. All rights reserved.
#
# The OWASP ModSecurity Core Rule Set is distributed under
# Apache Software License (ASL) version 2
# Please see the enclosed LICENSE file for full details.
# ------------------------------------------------------------------------

#
# The purpose of this file is to hold LOCAL exceptions for your site.
# The types of rules that would go into this file are one where you want
# to unconditionally disable rules or modify their actions.
#
# Save a copy of this template to RESPONSE-999-EXCEPTIONS.conf to activate it.
#

#
# Example - To unconditionally disable a rule ID
# 
# These directives MUST be specified AFTER the rules they are disabling
# at startup time
#
# SecRuleRemoveById 950010

#
# Example - To unconditionally modify a rule Action
#
# SecRuleUpdateActionById 915900 "pass"

#
# Example - To unconditionally remove parameter "foo" from inspection
# for XSS and SQLi rules
#
# SecRuleUpdateTargetByTag "WEB_ATTACK/XSS" "!ARGS:foo"
# SecRuleUpdateTargetByTag "WEB_ATTACK/SQL_INJECTION" "!ARGS:foo"


# -- [[ Changing the Disruptive Action for Anomaly Mode ]] --
#
# In Anomaly Mode (default in CRS3), the rules in REQUEST-949-BLOCKING-EVALUATION.conf
# and RESPONSE-959-BLOCKING-EVALUATION.conf check the accumulated attack scores
# against your policy. To apply a disruptive action, they overwrite the default
# actions specified in SecDefaultAction (setup.conf) with a 'deny' action.
# This 'deny' is by default paired with a 'status:403' action.
#
# In order to change the disruptive action from 'deny' to something else,
# you must use SecRuleUpdateActionByID directives AFTER the CRS rules
# are configured, for instance in the RESPONSE-999-EXCEPTIONS.conf file.
#
# These actions only apply when using Anomaly Mode.
#
# Default action: block with error 403
# (No configuration needed in this file if you want the default behavior.)
#

# Example: redirect back to the homepage on blocking
#
# SecRuleUpdateActionById 949110 "t:none,redirect:'http://%{request_headers.host}/',chain"
# SecRuleUpdateActionById 959100 "t:none,redirect:'http://%{request_headers.host}/',chain"

# Example: redirect to another URL on blocking
#
# SecRuleUpdateActionById 949110 "t:none,redirect:'http://example.com/report_problem',chain"
# SecRuleUpdateActionById 959100 "t:none,redirect:'http://example.com/report_problem',chain"

# Example: send an error 404
#
# SecRuleUpdateActionById 949110 "t:none,deny,status:404,chain"
# SecRuleUpdateActionById 959100 "t:none,deny,status:404,chain"

# Example: drop the connection (best for DoS attacks)
#
# SecRuleUpdateActionById 949110 "t:none,drop,chain"
# SecRuleUpdateActionById 959100 "t:none,drop,chain"
